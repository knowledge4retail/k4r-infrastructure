{{- if .Values.adapters.k4r.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hetida.fullname" . }}-adapter-k4r
  labels:
    {{- include "hetida.labels" . | nindent 4 }}
    app.kubernetes.io/component: adapter-k4r
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "hetida.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: adapter-k4r
  template:
    metadata:
      labels:
        {{- include "hetida.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: adapter-k4r
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: hetida-adapter-k4r
          image: "{{ .Values.adapters.k4r.image.repository }}:{{ .Values.adapters.k4r.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.adapters.k4r.image.pullPolicy | default .Values.image.pullPolicy}}
          ports:
            - name: http
              containerPort: 8093
              protocol: TCP
          # livenessProbe:
          #   initialDelaySeconds: 60
          #   periodSeconds: 30
          #   httpGet:
          #     path: /api/info
          #     port: http
          # readinessProbe:
          #   initialDelaySeconds: 30
          #   httpGet:
          #     path: /api/info
          #     port: http
          # env:
          #   - name: ADAPTER_K4R_DT_API_URL
          #     value: #TODO: Change and uncomment me if needed
      # volumes:
      #   - name: postgresql-initdb
      #     configMap:
      #       name: {{ include "hetida.fullname" . }}-hetida-initdb
## TODO: Resource limits
## Look at Initialization containers ?
##
{{- end }}